<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+github静态托管搭建个人博客</title>
    <url>/zierc/2443647d.html</url>
    <content><![CDATA[<h2 id="网站搭建和主题配置"><a href="#网站搭建和主题配置" class="headerlink" title="网站搭建和主题配置"></a>网站搭建和主题配置</h2><h3 id="请先看文章-小茗同学大佬的搭建教程"><a href="#请先看文章-小茗同学大佬的搭建教程" class="headerlink" title="请先看文章:小茗同学大佬的搭建教程"></a>请先看文章:<a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html">小茗同学大佬的搭建教程</a></h3><h3 id="由于上文已经非常完善，笔者只提几点注意事项（均为笔者踩的坑）"><a href="#由于上文已经非常完善，笔者只提几点注意事项（均为笔者踩的坑）" class="headerlink" title="由于上文已经非常完善，笔者只提几点注意事项（均为笔者踩的坑）"></a>由于上文已经非常完善，笔者只提几点注意事项（均为笔者踩的坑）</h3><ul>
<li>关于<code>_config.yml</code>中<code>deploy</code>的<code>branch</code>的配置，<code>master</code>要更换为<code>main</code></li>
<li>关于 url 配置，文章中没有提到，但是笔者在搭建时发现，<strong>url 对大小写要求很严格</strong>，如果你的 github 域名没有完全正确的填写，那么网站的样式是加载不出来的</li>
<li>CNAME 必须移到<code>source</code>文件夹中进行保留</li>
</ul>
<h2 id="链接永久化"><a href="#链接永久化" class="headerlink" title="链接永久化"></a>链接永久化</h2><div class="note simple"><p>减少网页链接丢失，同时减少 url 的层级，对爬虫比较友好</p>
</div>

<h3 id="如何实现"><a href="#如何实现" class="headerlink" title="如何实现"></a>如何实现</h3><p>下载插件<code>hexo-abbrlink</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>

<p>在根目录中的<code>_conflg.yml</code>中配置生成链接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">permalink: zierc/:abbrlink.html</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32 # 算法：crc16(default) and crc32</span><br><span class="line">  rep: hex</span><br></pre></td></tr></table></figure>

<div class="note warning simple"><p>注意：上述代码中<code>zierc</code>为自定义内容，你想咋填咋填，但是会影响到关于<strong>图片位置生成的操作（hexo-asset-image 插件）</strong></p>
</div>

<p>由于<code>_config.yml</code>已经设置了 permalink， 这里重复设置，此时构建会报错，所以需要<strong>如下图</strong>一样注释一些默认的代码<br><img src="/zierc/2443647d/Snipaste_2024-04-12_09-48-39.png"></p>
<h3 id="如果你使用了hexo-asset-image"><a href="#如果你使用了hexo-asset-image" class="headerlink" title="如果你使用了hexo-asset-image"></a>如果你使用了<code>hexo-asset-image</code></h3><p>由于 image 的路径设置是根据 hexo 框架原来的路径走的，所以此时你会发现构建出的网站，图片无法加载<br>此时需要修改一下源码<br>找到目录<code>node_modules\hexo-asset-image\index.js</code></p>
<ul>
<li>在大概第 12 行左右<code>var link = data.permalink;</code>后面添加如下代码，用于定义变量 abbrlink，当然，具体添加到哪里看你自己的喜好，笔者只是为了逻辑清晰</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var abbrlink = data.abbrlink;</span><br></pre></td></tr></table></figure>

<ul>
<li>然后在大概第 58 行左右，将代码<code>$(this).attr(&#39;src&#39;, config.root + link + src);</code>修改为<code> $(this).attr(&#39;src&#39;, config.root +&#39;zierc/&#39; +abbrlink +&#39;/&#39;+ src);</code><div class="note warning simple"><p>注意：此处回应前面的提示，修改之后的代码中<code>zierc</code>为自定义内容，你之前填的什么，现在就修改成什么</p>
</div></li>
</ul>
<p>之后为了防止一些奇怪的问题，直接 hexo 三件套就可以了</p>
<h2 id="双线部署"><a href="#双线部署" class="headerlink" title="双线部署"></a>双线部署</h2><p>由于 github 部署访问太慢了<br>所以添加一个国内的 coding 部署，提高访问速度</p>
<h3 id="如何实现-1"><a href="#如何实现-1" class="headerlink" title="如何实现"></a>如何实现</h3><p>首先，请详细观看<a href="https://blog.juanertu.com/">卷二兔</a>大佬的<a href="https://www.bilibili.com/video/BV1hF411v7e1/?vd_source=27f2b246cedeb85170372b3386cefa14">b 站视频教程</a>本文的实现主要是参考了这位大佬。当你观看视频时，可能会发现一些场景和视频中不同，这就是笔者在此的作用了</p>
<h4 id="deploy-配置"><a href="#deploy-配置" class="headerlink" title="deploy 配置"></a>deploy 配置</h4><p><code>_config.yml</code>配置和视频中所示不同，经过笔者尝试，如果按照视频的格式配置，会出现腾讯云和 GitHub 都不会自动部署的问题，经过查看 hexo 的文档和各种资料，笔者得到以下成功的配置方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  - type: &quot;git&quot;</span><br><span class="line">    repository: git@github.com:ZiercPro/ZiercPro.github.io.git</span><br><span class="line">    branch: main</span><br><span class="line">  - type: &quot;git&quot;</span><br><span class="line">    repository: coding仓库地址</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure>

<p>如果这个也无法帮助到你，那可能需要你移步了，对此笔者感到非常抱歉。</p>
<div class="note warning simple"><p>如果你发现该视频的方法不行，可以尝试另一位大佬的方法（笔者嫌麻烦没有尝试，但是这已经是笔者能找到的最新的方法了）<a href="https://www.cnblogs.com/Chen0495/p/17947479">文档链接-&gt;</a></p>
</div>

<h2 id="针对主题ButterFly遇到的问题"><a href="#针对主题ButterFly遇到的问题" class="headerlink" title="针对主题ButterFly遇到的问题"></a>针对主题<a href="https://github.com/jerryc127/hexo-theme-butterfly">ButterFly</a>遇到的问题</h2><h3 id="主题不显示"><a href="#主题不显示" class="headerlink" title="主题不显示"></a>主题不显示</h3><p>在切换主题之后，主题不显示，只显示一行文本：<br><code>extends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</code><br>解决方案为：在根目录中执行以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>

<p>然后重新构建，并在本地测试即可<br>如果还有什么问题请先运行<code>hexo clean</code> 之后再重新运行<code>hexo g</code></p>
<h3 id="设置背景图片"><a href="#设置背景图片" class="headerlink" title="设置背景图片"></a>设置背景图片</h3><p>由于笔者没有仔细看 <code>_config.yml</code> 的选项，导致设置背景图片一直在网上寻找陈年方法，都没有效果，浪费了很多时间（4 小时）还没成功，后经过官方大佬点拨发现在<code>_config.yml</code>偏后半段，有<code>background</code>进行背景图片设置，如下图：<br><img src="/zierc/2443647d/Snipaste_2024-04-10_21-14-27.png"></p>
<div class="note simple"><p>因为 background 设置在比较后面，我并没有在官方文档中找到，所以不知道官方文档中有没有（肯定是有的），现身说法，望诸位不要像我一样犯傻</p>
</div>

<p>另附一张与官方大佬”<strong>斗智斗勇</strong>“的精彩画面。<del>望周知</del><br><img src="/zierc/2443647d/image.png" alt="我是傻逼"></p>
<h3 id="个性化鼠标指针样式"><a href="#个性化鼠标指针样式" class="headerlink" title="个性化鼠标指针样式"></a>个性化鼠标指针样式</h3><p><a href>该鼠标样式原创博客</a></p>
<p>笔者不了解前端，只是自己加了个渐变色，这里直接给出自己的代码，不多做说明</p>
<div class="note default simple"><p>JS 代码</p>
</div>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="variable constant_">CURSOR</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Math</span>.<span class="property">lerp</span> = <span class="function">(<span class="params">a, b, n</span>) =&gt;</span> (<span class="number">1</span> - n) * a + n * b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getStyle</span> = (<span class="params">el, attr</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">window</span>.<span class="property">getComputedStyle</span></span><br><span class="line">      ? <span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(el)[attr]</span><br><span class="line">      : el.<span class="property">currentStyle</span>[attr];</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;&#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cursor</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">pos</span> = &#123; <span class="attr">curr</span>: <span class="literal">null</span>, <span class="attr">prev</span>: <span class="literal">null</span> &#125;;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">pt</span> = [];</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">create</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">init</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">move</span>(<span class="params">left, top</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">style</span>[<span class="string">&quot;left&quot;</span>] = <span class="string">`<span class="subst">$&#123;left&#125;</span>px`</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">style</span>[<span class="string">&quot;top&quot;</span>] = <span class="string">`<span class="subst">$&#123;top&#125;</span>px`</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">create</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">cursor</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">cursor</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">id</span> = <span class="string">&quot;cursor&quot;</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;hidden&quot;</span>);</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">cursor</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> el = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; el.<span class="property">length</span>; i++)</span><br><span class="line">      <span class="keyword">if</span> (<span class="title function_">getStyle</span>(el[i], <span class="string">&quot;cursor&quot;</span>) == <span class="string">&quot;pointer&quot;</span>) <span class="variable language_">this</span>.<span class="property">pt</span>.<span class="title function_">push</span>(el[i].<span class="property">outerHTML</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>((<span class="variable language_">this</span>.<span class="property">scr</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;style&quot;</span>)));</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">scr</span>.<span class="property">innerHTML</span> = <span class="string">`* &#123;cursor: url(&quot;data:image/svg+xml,&lt;svg xmlns=&#x27;http://www.w3.org/2000/svg&#x27; viewBox=&#x27;0 0 10 10&#x27; width=&#x27;12px&#x27; height=&#x27;12px&#x27;&gt;&lt;circle cx=&#x27;3&#x27; cy=&#x27;3&#x27; r=&#x27;6&#x27; opacity=&#x27;.3&#x27;/&gt;&lt;/svg&gt;&quot;) 1 1, auto&#125;`</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">refresh</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">scr</span>.<span class="title function_">remove</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;hover&quot;</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;active&quot;</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">pos</span> = &#123; <span class="attr">curr</span>: <span class="literal">null</span>, <span class="attr">prev</span>: <span class="literal">null</span> &#125;;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">pt</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">create</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">init</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">onmouseover</span> = <span class="function">(<span class="params">e</span>) =&gt;</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">pt</span>.<span class="title function_">includes</span>(e.<span class="property">target</span>.<span class="property">outerHTML</span>) &amp;&amp;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;hover&quot;</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">onmouseout</span> = <span class="function">(<span class="params">e</span>) =&gt;</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">pt</span>.<span class="title function_">includes</span>(e.<span class="property">target</span>.<span class="property">outerHTML</span>) &amp;&amp;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;hover&quot;</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">onmousemove</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">curr</span> == <span class="literal">null</span> &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">move</span>(e.<span class="property">clientX</span> - <span class="number">8</span>, e.<span class="property">clientY</span> - <span class="number">8</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">curr</span> = &#123; <span class="attr">x</span>: e.<span class="property">clientX</span> - <span class="number">8</span>, <span class="attr">y</span>: e.<span class="property">clientY</span> - <span class="number">8</span> &#125;;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;hidden&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">onmouseenter</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;hidden&quot;</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">onmouseleave</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;hidden&quot;</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">onmousedown</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;active&quot;</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">onmouseup</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;active&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>.<span class="property">x</span> = <span class="title class_">Math</span>.<span class="title function_">lerp</span>(<span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">curr</span>.<span class="property">x</span>, <span class="number">0.15</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>.<span class="property">y</span> = <span class="title class_">Math</span>.<span class="title function_">lerp</span>(<span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>.<span class="property">y</span>, <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">curr</span>.<span class="property">y</span>, <span class="number">0.15</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">move</span>(<span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>.<span class="property">y</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span> = <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">curr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(<span class="function">() =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">render</span>());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable constant_">CURSOR</span> = <span class="keyword">new</span> <span class="title class_">Cursor</span>();</span><br><span class="line">  <span class="comment">// 需要重新获取列表时，使用 CURSOR.refresh()</span></span><br><span class="line">&#125;)();</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<div class="note default simple"><p>css 代码</p>
</div>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#cursor</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(-<span class="number">45deg</span>, <span class="number">#927aff</span>, <span class="number">#e22c72</span>, <span class="number">#4d20ee</span>, <span class="number">#42ff29</span>);</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">400%</span> <span class="number">400%</span>;</span><br><span class="line">  <span class="attribute">animation</span>: gradientBG <span class="number">8s</span> ease infinite;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.45</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">10086</span>;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">transition-property</span>: background, opacity, transform;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> gradientBG &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#cursor</span><span class="selector-class">.hidden</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#cursor</span><span class="selector-class">.hover</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.35</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#cursor</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.7</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.75</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="note warning simple"><p>但是这个鼠标样式还有个小问题，那就是鼠标如果在复制代码的按钮上时，会变回原指针</p>
</div>

<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>按照原作者的意思，应该会检测元素中是否有<code>cursor:pointer</code> 于是笔者通过浏览器控制台，发现 copy 代码的按钮类名为<code>fas fa-paste copy-button</code><br>于是笔者又去查看源码，发现在<code>highlight.styl</code>文件中，关于<code>copy-button</code>代码如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.copy-button</span><br><span class="line">  position: absolute</span><br><span class="line">  right: 14px</span><br><span class="line">  cursor: pointer</span><br><span class="line">  transition: color .2s</span><br><span class="line"></span><br><span class="line">  &amp;:hover</span><br><span class="line">    color: $theme-color</span><br></pre></td></tr></table></figure>

<p>这让笔者一脸懵逼，理论上来说应该能检测到<code>cursor:pointer</code>的啊<br>但是这些代码到底是什么意思，笔者也不知道，希望能有大佬来解决吧</p>
<div class="note info simple"><p>提一嘴，笔者专门去其他人的博客中对比了，似乎这个问题并不针对这款鼠标样式，其他鼠标样式修改方法，同样检测不到 copy 按钮，会恢复原鼠标样式</p>
</div>

<h3 id="想要自定义其他样式，可以参考Butterfly-官方文档-获取本站源码"><a href="#想要自定义其他样式，可以参考Butterfly-官方文档-获取本站源码" class="headerlink" title="想要自定义其他样式，可以参考Butterfly 官方文档 | 获取本站源码"></a>想要自定义其他样式，可以参考<a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 官方文档</a> | <a href="https://github.com/ZiercPro/ZiercPro.github.io"><code>获取本站源码</code></a></h3><h2 id="使用gitalk设置评论模块"><a href="#使用gitalk设置评论模块" class="headerlink" title="使用gitalk设置评论模块"></a>使用<a href="https://github.com/gitalk/gitalk">gitalk</a>设置评论模块</h2><p>先找到 <a href="https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96">butterfly 文档</a>中的<code>评论</code>，它会让你跟随<a href="https://github.com/gitalk/gitalk">gitalk</a>的教程，内容简单易懂</p>
<h3 id="关于配置，笔者来帮忙避坑"><a href="#关于配置，笔者来帮忙避坑" class="headerlink" title="关于配置，笔者来帮忙避坑"></a>关于配置，笔者来帮忙避坑</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#注意，到admin之前都需要加双引号，内容写到引号中</span><br><span class="line">gitalk:</span><br><span class="line">  client_id: &quot;&quot; #填写id</span><br><span class="line">  client_secret: &quot;&quot;#填写secret</span><br><span class="line">  repo: &quot;&quot;#填你的库名称，直接复制过来就可以了，笔者 使用的是托管网站的仓库，即ZiercPro.github.io</span><br><span class="line">  owner: &quot;&quot;#填写自己的github用户名，笔者就是ZiercPro</span><br><span class="line">  admin: [&quot;ZiercPro&quot;,&quot; &quot;,...]#填写能修改你仓库的人名，如果只是用于自己的博客网站，只需要和owner中填写的一样即可</span><br><span class="line">  option: #笔者没有设置</span><br></pre></td></tr></table></figure>

<h2 id="笔者的吐槽"><a href="#笔者的吐槽" class="headerlink" title="笔者的吐槽"></a>笔者的吐槽</h2><p>笔者搭建过程中，一大感触就是，怎么感觉他们的过程和我的有点不一样，似乎很多文章都有点过时了。尽管最后，这些文章大概率依旧能够帮到笔者，但是总是会让笔者陷入混乱：这里到底该这样还是那样，为什么呢。当然，这个问题和有些<strong>平台或工具更新过快</strong>也脱不了关系。<br>所以笔者也在在本文顶部预先提醒读者，注意本文的时效性，可能一小段时间后，这篇文章就已经不能食用了，如果你发现这篇文章已经是数年前的古董，那还是找一篇更新的教程来看吧</p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>这是笔者第一篇文章，诸多问题，不用谅解，直接来找我私聊即可（<br>如果有什么问题，可以发表评论或者通过各种渠道找我</p>
<p>参考文献：<br><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html">小茗大佬 https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a><br><a href="https://www.jianshu.com/p/aa936a8369fb">主题不显示问题 https://www.jianshu.com/p/aa936a8369fb</a><br><a href="https://www.drflower.top/posts/5920b38e/">花桑大佬 https://www.drflower.top/posts/5920b38e/</a><br><a href="https://blog.juanertu.com/">卷二兔大佬 https://blog.juanertu.com</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>游戏设计模式学习路线与思路</title>
    <url>/zierc/a2617f52.html</url>
    <content><![CDATA[<div class="note info simple"><p>更新中</p>
</div>

<h2 id="学习设计模式之前"><a href="#学习设计模式之前" class="headerlink" title="学习设计模式之前"></a>学习设计模式之前</h2><p>先学习软件开发的基本原则，虽说笔者主攻方向为基于 Unity 引擎的游戏开发，但是游戏开发与软件开发有许多共通处，掌握学习游戏设计模式可以为后续开发与工具的学习运用打下坚实的基础</p>
<h3 id="软件设计的原则"><a href="#软件设计的原则" class="headerlink" title="软件设计的原则"></a>软件设计的原则</h3><ul>
<li>单一职责原则（SRP）</li>
<li>开闭原则（OCP）</li>
<li>里氏替换原则（LSP）</li>
<li>依赖倒置原则（DIP）</li>
<li>接口隔离原则（ISP）</li>
<li>迪米特法则（LOD）</li>
<li>合成&#x2F;聚合复用原则（CARP）</li>
</ul>
]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>Unity</tag>
        <tag>框架</tag>
        <tag>基础</tag>
      </tags>
  </entry>
  <entry>
    <title>Addressable热更新使用基础</title>
    <url>/zierc/2ebdb5f2.html</url>
    <content><![CDATA[<h2 id="热更新"><a href="#热更新" class="headerlink" title="热更新"></a>热更新</h2><h3 id="资源热更新"><a href="#资源热更新" class="headerlink" title="资源热更新"></a>资源热更新</h3><p>主要通过 AB 包来实现，比较简单。</p>
<h3 id="代码热更新"><a href="#代码热更新" class="headerlink" title="代码热更新"></a>代码热更新</h3><p>csharp 代码打包以后就变成了二进制，和程序同时启动，无法修改。</p>
<p><img src="/zierc/2ebdb5f2/Untitled.png"></p>
<h3 id="热更新流程"><a href="#热更新流程" class="headerlink" title="热更新流程"></a>热更新流程</h3><p><img src="/zierc/2ebdb5f2/Untitled%201.png"></p>
<blockquote>
<p>MD5 值 用 md5 算法，生成资源对应的唯一标识符，有助于资源的增量打包</p>
<p><img src="/zierc/2ebdb5f2/Untitled%202.png"></p>
</blockquote>
<h2 id="代码热更新的手段"><a href="#代码热更新的手段" class="headerlink" title="代码热更新的手段"></a>代码热更新的手段</h2><h3 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a>Lua</h3><p><img src="/zierc/2ebdb5f2/Untitled%203.png"></p>
<h3 id="ILRuntime"><a href="#ILRuntime" class="headerlink" title="ILRuntime"></a>ILRuntime</h3><p><img src="/zierc/2ebdb5f2/Untitled%204.png"></p>
<h3 id="puerts"><a href="#puerts" class="headerlink" title="puerts"></a>puerts</h3><p><img src="/zierc/2ebdb5f2/Untitled%205.png"></p>
<h3 id="HyBridCLR-huatuo"><a href="#HyBridCLR-huatuo" class="headerlink" title="HyBridCLR(huatuo"></a>HyBridCLR(huatuo</h3><p><img src="/zierc/2ebdb5f2/Untitled%206.png"></p>
<h2 id="AB-包"><a href="#AB-包" class="headerlink" title="AB 包"></a><del>AB 包</del></h2><h3 id="AssetsBundle-Browser"><a href="#AssetsBundle-Browser" class="headerlink" title="AssetsBundle Browser"></a><del>AssetsBundle Browser</del></h3><h3 id="AssetsBundle-Browser-的安装"><a href="#AssetsBundle-Browser-的安装" class="headerlink" title="AssetsBundle Browser 的安装"></a><del>AssetsBundle Browser 的安装</del></h3><p><del>目前 unity packagemanager 已经找不到这个插件了</del></p>
<p><del>需要到<a href="https://github.com/Unity-Technologies/AssetBundles-Browser"><strong>github</strong></a>去下载</del></p>
<p><del>建议使用建议使用 url 的下载方式：unity 编辑器 →Window→packmanager→Add→Url 输入 github 上的获取链接</del></p>
<h3 id="AssetsBundle-Browser-安装问题"><a href="#AssetsBundle-Browser-安装问题" class="headerlink" title="AssetsBundle Browser 安装问题"></a><del>AssetsBundle Browser 安装问题</del></h3><p><del>报错：boo 找不到</del></p>
<p><del>这个 boo Unity 很久就不用了，并且这个报错的脚本在一个叫 Tests 的文件夹中，因此大概率是 unity 团队忘了维护，或者有其他的理由，总之直接把这个 tests 文件夹删了即可。</del></p>
<hr>
<h2 id="不再使用-abb"><a href="#不再使用-abb" class="headerlink" title="不再使用 abb"></a>不再使用 abb</h2><p>突然发现 unity 官方已经不推荐使用 abb 了而是 addressables assets system（AA</p>
<p>所以现在来研究 AA</p>
<h2 id="AssetStudio"><a href="#AssetStudio" class="headerlink" title="AssetStudio"></a>AssetStudio</h2><p>可以对未加密的 ab 包进行逆向工程，解析出资源。</p>
<p>但是我这里软件加载资源出问题了，无法预览，也无法导出。</p>
<h2 id="Addressables-Assets-System"><a href="#Addressables-Assets-System" class="headerlink" title="Addressables Assets System"></a><a href="https://blog.csdn.net/linxinfa/article/details/122390621">Addressables Assets System</a></h2><p>Unity 新的打包工具，支持加密（应该，之前有个.CN 的加强版，现在找不到了，猜测是合并到一起了。）</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>直接到 package manager 里面 install 即可</p>
<h3 id="路径命名问题"><a href="#路径命名问题" class="headerlink" title="路径命名问题"></a>路径命名问题</h3><p>使用 ab 包时，资源路径不能出现’[]’，建议使用’()’代替</p>
<p><img src="/zierc/2ebdb5f2/Untitled%207.png"></p>
<h3 id="两种不同的打包和加载方式"><a href="#两种不同的打包和加载方式" class="headerlink" title="两种不同的打包和加载方式"></a>两种不同的打包和加载方式</h3><ol>
<li>包体内打包与加载</li>
<li>包体外打包与加载</li>
</ol>
<p>包体内我理解为打包到本地，加载则直接到本地的加载目录加载</p>
<p>包体外我理解为打包到服务器，加载则根据给定的服务器地址，进行加载（默认为本地</p>
<p><img src="/zierc/2ebdb5f2/Untitled%208.png"></p>
<p>包体内打包的方式，在项目构建后会被打包到游戏文件内部</p>
<p>包体外的则会在项目的 <code>ServerData/</code> 文件中</p>
<h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p><img src="/zierc/2ebdb5f2/Untitled%209.png"></p>
<p>点击即可按照设置进行打包</p>
<h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><p>log 显示，有许多 unity 内置的模块居然找不到。<del>尝试换一个编译器版本。</del></p>
<p>尝试新建项目，发现可以用了，之前的项目出于某种原因，似乎坏掉了。</p>
<h3 id="加载资源"><a href="#加载资源" class="headerlink" title="加载资源"></a>加载资源</h3><blockquote>
<p>tips:InstantiateAsync 函数可以直接将获取的资源实例化</p>
</blockquote>
<blockquote>
<p>资源加载时，不需要管是远程资源还是本地资源</p>
</blockquote>
<h4 id="加载方法"><a href="#加载方法" class="headerlink" title="加载方法"></a>加载方法</h4><ol>
<li>通过 Addressable Name 加载</li>
</ol>
<blockquote>
<p>这种加载方式不需要管是本地资源包还是远程资源包</p>
</blockquote>
<p>代码如下:</p>
<p><img src="/zierc/2ebdb5f2/Untitled%2010.png"></p>
<p><img src="/zierc/2ebdb5f2/Untitled%2011.png"></p>
<p>把这个脚本挂载到一个场景中的游戏物体即可</p>
<ol start="2">
<li>通过引用(AssetsReference)方式加载</li>
</ol>
<p>原理是通过弱引用获取资源，然后根据弱引用实例化</p>
<p><img src="/zierc/2ebdb5f2/Untitled%2012.png"></p>
<p><img src="/zierc/2ebdb5f2/Untitled%2013.png"></p>
<p><img src="/zierc/2ebdb5f2/Untitled%2014.png"></p>
<h4 id="加载途径"><a href="#加载途径" class="headerlink" title="加载途径"></a>加载途径</h4><ol>
<li>Use AssetDatabase</li>
</ol>
<p>这个就是直接加载资源，不是加载 ab 包，一般开发时就用这个就行，因为快。</p>
<ol start="2">
<li>Simulate Group</li>
</ol>
<p>在不打包的情况下，模拟 AssetBundle 的操作。这个模式下，可以通过分析器，查看资源加载状况，分析加载策略</p>
<p><img src="/zierc/2ebdb5f2/Untitled%2015.png"></p>
<ol start="3">
<li>Use Exising Build</li>
</ol>
<p>这个模式则是真正的加载资源包</p>
<h3 id="加载远程资源"><a href="#加载远程资源" class="headerlink" title="加载远程资源"></a>加载远程资源</h3><p>如果要在 editor 环境下进行测试，需要搭建 web 服务器。</p>
<p>可以使用 addressable 的 Hosting Services 工具</p>
<p>关于报错</p>
<p>要在 project settings&#x2F;Player&#x2F;Configuration 中 把 Allow download over HTTP* 选为允许。</p>
<p><img src="/zierc/2ebdb5f2/Untitled%2016.png"></p>
<h3 id="打包模式和批量加载"><a href="#打包模式和批量加载" class="headerlink" title="打包模式和批量加载"></a>打包模式和批量加载</h3><p>每个 Group 都可以单独设置打包模式</p>
<p><img src="/zierc/2ebdb5f2/Untitled%2017.png"></p>
<p>三种模式，分别是 全部打进一个包中，全部分开打包，按照层级打包</p>
<p>第一个就是默认的，第二个所有资源都会单独打成一个 bundle 文件。</p>
<p>一般选第三个，将资源的层级设置好，就可以了，而且还能方便批量加载。</p>
<p><img src="/zierc/2ebdb5f2/Untitled%2018.png"></p>
<p><img src="/zierc/2ebdb5f2/Untitled%2019.png"></p>
<blockquote>
<p>一个资源可以设置多个 lable</p>
</blockquote>
<p>批量加载，方法如下。</p>
<p><img src="/zierc/2ebdb5f2/Untitled%2020.png"></p>
<p><img src="/zierc/2ebdb5f2/Untitled%2021.png"></p>
<blockquote>
<p>注意方法名变了。 Asset 和 Assets</p>
</blockquote>
<p><img src="/zierc/2ebdb5f2/Untitled%2022.png"></p>
<h3 id="打资源热更新包"><a href="#打资源热更新包" class="headerlink" title="打资源热更新包"></a>打资源热更新包</h3><p>首先，要支持热更新，需要开启 Catalog</p>
<p><img src="/zierc/2ebdb5f2/Untitled%2023.png"></p>
<p><img src="/zierc/2ebdb5f2/Untitled%2024.png"></p>
<p>设置好资源打包加载路径。</p>
<p>打包</p>
<p>可能会报错，提示端口被占用，这是因为刚刚在测试远程加载时，开启了这个端口，现在只要 reset 一下就行，这个端口会被重新打开</p>
<p><img src="/zierc/2ebdb5f2/Untitled%2025.png"></p>
<p>现在打包出来的文件中，多了两个名为 catalog 的 .hash 和 . json 文件，用于增量打包时对比哪些文件发生了变化。</p>
<p>现在将 Group 中，一个需要替换的资源去除，然后将要替换的资源命名为相同的名字，加入到 Group 中，选择 Update a previous Build</p>
<p><img src="/zierc/2ebdb5f2/Untitled%2026.png"></p>
<p>就会多一个更新包</p>
<p><img src="/zierc/2ebdb5f2/Untitled%2027.png"></p>
<p>现在再加载，就会加载更新后的资源。</p>
<p>如果不更新，直接选择 Update.. 就不会打新的包（亲测</p>
<h3 id="关于资源释放"><a href="#关于资源释放" class="headerlink" title="关于资源释放"></a>关于资源释放</h3><p>要通过 Addressables.Release 释放加载 handle 或者加载的结果</p>
<p><img src="/zierc/2ebdb5f2/Untitled%2028.png"></p>
<p><img src="/zierc/2ebdb5f2/Untitled%2029.png"></p>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><blockquote>
<p>以下是教程中没有提及的内容，如果你要参考，建议先看<a href="https://blog.csdn.net/linxinfa/article/details/122390621">教程</a></p>
</blockquote>
<h3 id="首先是-unity-的设置问题，在-Player-的-Config-设置中，需要允许从-http-服务器下载资源"><a href="#首先是-unity-的设置问题，在-Player-的-Config-设置中，需要允许从-http-服务器下载资源" class="headerlink" title="首先是 unity 的设置问题，在 Player 的 Config 设置中，需要允许从 http 服务器下载资源"></a>首先是 unity 的设置问题，在 Player 的 Config 设置中，需要允许从 http 服务器下载资源</h3><p><img src="/zierc/2ebdb5f2/Untitled30.png"></p>
<h3 id="然后是编辑器中-Addressable-asset-settings"><a href="#然后是编辑器中-Addressable-asset-settings" class="headerlink" title="然后是编辑器中 Addressable asset settings"></a>然后是编辑器中 Addressable asset settings</h3><p>如果要实现热更新，必须开启 <code>Build remote catalog</code>功能</p>
<p>这个选项下面的 <code>Buid&amp;Load Paths</code> 指的是远程包对应的 catalog 的构建和加载路径路径</p>
<p><img src="/zierc/2ebdb5f2/Untitled31.png"></p>
<p>在构建项目，或者打包本地资源时，会输出两个同名文件 catalog，分别时.hash 和.json 后缀的文件。</p>
<p>勾选上述的 <code>Build Remote Catalog</code> 功能后，复制一份 catalog 作为你远程资源的目录，这份 catalog 的位置取决于你选择的路径。</p>
<p>个人理解，这份 catalog 应该作为最新的目录，放在服务器，用于进行资源更新对比。</p>
<p>构建游戏时，addressable 会自动打一次 local 包，同时将这些包作为游戏打包时的包内资源。</p>
<p>也就是说，游戏根目录中 streamingassets 文件中的资源，是由编辑器中所有 local 的 addressable 资源构成（包括所有 local 分组</p>
]]></content>
      <categories>
        <category>Unity技术</category>
      </categories>
      <tags>
        <tag>Unity</tag>
        <tag>资源热更新</tag>
      </tags>
  </entry>
  <entry>
    <title>关于</title>
    <url>/about/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>分类</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>画展</title>
    <url>/gallery/index.html</url>
    <content><![CDATA[<div class="gallery-group-main">
<figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src="https://s2.loli.net/2024/04/11/5EfvsRmwIqp1QJt.png" alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">米山舞</div>
  <p>大大我爱你</p>
  <a href="/Gallery/yoneyama%20mei"></a>
  </figcaption>
  </figure>
  
<figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src="https://s2.loli.net/2024/04/11/LgwBTIWvzUcHQ24.png" alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">个人</div>
  <p>不会画画的渣渣</p>
  <a href="/Gallery/%E4%B8%AA%E4%BA%BA"></a>
  </figcaption>
  </figure>
  
</div>
]]></content>
  </entry>
  <entry>
    <title>有幸相遇</title>
    <url>/link/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>标签</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
